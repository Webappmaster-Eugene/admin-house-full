version: "3.9"

services:
  front:
    container_name: admin-house-front
    image: eugenenumart/admin-house-front:latest
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    expose:
      - 8080
    command: "npm run start"

  postgres:
    container_name: admin-house-postgres
    image: postgres:16-alpine
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 10s
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE: ${POSTGRES_DATABASE}
    volumes:
      - data:/var/lib/postgresql/data
    expose:
      - "5432:5432"

  back:
    container_name: admin-house-back
    image: eugenenumart/admin-house-back:latest
    restart: always
    environment:
      DATABASE_URL: ${DATABASE_URL}
      STRICT_ADMIN_KEY: ${STRICT_ADMIN_KEY}
      APP_PORT: ${APP_PORT}
      API_PREFIX: ${API_PREFIX}
      API_VERSION: ${API_VERSION}
      JWT_KEY: ${JWT_KEY}
      KEY_SECRET_FOR_STRICT_ADMIN_KEY: ${KEY_SECRET_FOR_STRICT_ADMIN_KEY}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      NODE_ENV: production
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    depends_on:
      - postgres
    expose:
      - 3000
    command: "npm run start"

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: admin-house-pgadmin
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 10s
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_PORT}
    ports:
      - 5050:5050
    depends_on:
      - postgres

  redis:
    container_name: admin-house-redis
    image: redis:7.2.4-alpine
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 10s
    ports:
      - 6379:6379

  redis-commander:
    container_name: admin-house-redis-commander
    hostname: redis-commander
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 10s
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

  nginx:
    container_name: admin-house-nginx
    image: nginx:latest
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 10s
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./certbot/conf:/etc/nginx/ssl
      - ./certbot/data:/var/www/html

  certbot:
    container_name: admin-house-certbot
    image: certbot/certbot:latest
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 10s
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email jamesnumart@gmail.com --agree-tos --no-eff-email -d alibaba.hhos.ru -d www.alibaba.hhos.ru -d api.alibaba.hhos.ru -d www.api.alibaba.hhos.ru
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/logs:/var/log/letsencrypt
      - ./certbot/data:/var/www/html

volumes:
  data:
